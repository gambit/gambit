# makefile for Gambit-C library.

# Copyright (c) 1994-2012 by Marc Feeley, All Rights Reserved.

herefromroot = lib
rootfromhere = ..
SUBDIRS = @RTLIBSUBSYS@

PACKAGE_SHORTNAME = @PACKAGE_SHORTNAME@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

@SET_MAKE@

srcdir = @srcdir@
VPATH = @srcdir@
srcdirpfx = @srcdirpfx@

C_COMPILER = @C_COMPILER_MF@
C_PREPROC = @C_PREPROC_MF@
FLAGS_OBJ = @FLAGS_OBJ_MF@
FLAGS_DYN = @FLAGS_DYN_MF@
FLAGS_LIB = @FLAGS_LIB_MF@
FLAGS_EXE = @FLAGS_EXE_MF@
DEFS = @DEFS@
LIBS = @LIBS@

GAMBCLIB_DEFS = @GAMBCLIB_DEFS_MF@
LIB_PREFIX = @LIB_PREFIX@
LIB_EXTENSION = @LIB_EXTENSION@
GAMBCLIB = @GAMBCLIB@
GAMBCGSCLIB = @GAMBCGSCLIB@
GAMBCGSILIB = @GAMBCGSILIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LIB = @INSTALL_LIB@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
LN_S = @LN_S@
RANLIB = @RANLIB@
RC = @RC@
GIT = @GIT@
HG = @HG@

prefix = @prefix@
exec_prefix = @exec_prefix@
includedir = @includedir@
libdir = @libdir@
bindir = @bindir@
docdir = @docdir@
infodir = @infodir@
emacsdir = @emacsdir@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
datadir = @datadir@
htmldir = @htmldir@
dvidir = @dvidir@
pdfdir = @pdfdir@
psdir = @psdir@
localedir = @localedir@
mandir = @mandir@

.SUFFIXES:
.SUFFIXES: .scm .c @obj@

NORMAL_C = main.c setup.c mem.c os.c os_base.c os_time.c os_shell.c os_files.c os_dyn.c os_tty.c os_io.c c_intf.c
NORMAL_CPP =
NORMAL_H = setup.h mem.h os.h os_base.h os_time.h os_shell.h os_files.h os_dyn.h os_tty.h os_io.h c_intf.h dead.h
NORMAL_O = main@obj@ setup@obj@ mem@obj@ c_intf@obj@ os@obj@ os_base@obj@ os_time@obj@ os_shell@obj@ os_files@obj@ os_dyn@obj@ os_tty@obj@ os_io@obj@
NORMAL_O_PLUS = +main@obj@ +setup@obj@ +mem@obj@ +c_intf@obj@ +os@obj@ +os_base@obj@ +os_time@obj@ +os_shell@obj@ +os_files@obj@ +os_dyn@obj@ +os_tty@obj@ +os_io@obj@
NORMAL_O_COMMA = main@obj@,setup@obj@,mem@obj@,c_intf@obj@,os@obj@,os_base@obj@,os_time@obj@,os_shell@obj@,os_files@obj@,os_dyn@obj@,os_tty@obj@,os_io@obj@
NORMAL_SOURCES = $(NORMAL_C) $(NORMAL_CPP) $(NORMAL_H)

HEADERS_SCM = "_kernel\#.scm" "_system\#.scm" "_num\#.scm" "_std\#.scm" \
"_eval\#.scm" "_io\#.scm" "_nonstd\#.scm" "_thread\#.scm" "_repl\#.scm"
MODULES = _kernel _system _num _std \
_eval _io _nonstd _thread _repl
MODULES_SCM = _kernel.scm _system.scm _num.scm _std.scm \
_eval.scm _io.scm _nonstd.scm _thread.scm _repl.scm
MODULES_C = _kernel.c _system.c _num.c _std.c \
_eval.c _io.c _nonstd.c _thread.c _repl.c
MODULES_O = _kernel@obj@ _system@obj@ _num@obj@ _std@obj@ \
_eval@obj@ _io@obj@ _nonstd@obj@ _thread@obj@ _repl@obj@
MODULES_O_PLUS = +_kernel@obj@ +_system@obj@ +_num@obj@ +_std@obj@ \
+_eval@obj@ +_io@obj@ +_nonstd@obj@ +_thread@obj@ +_repl@obj@
MODULES_O_COMMA = _kernel@obj@,_system@obj@,_num@obj@,_std@obj@,\
+_eval@obj@,_io@obj@,_nonstd@obj@,_thread@obj@,_repl@obj@
NORMAL_O_IN_COMPILE_ORDER = main@obj@ os_tty@obj@ c_intf@obj@ \
os_io@obj@ setup@obj@ mem@obj@ os_files@obj@ os@obj@ os_base@obj@ \
os_time@obj@ os_shell@obj@ os_dyn@obj@ 
MODULES_O_IN_COMPILE_ORDER = _io@obj@ _num@obj@ _std@obj@ \
_kernel@obj@ _nonstd@obj@ _repl@obj@ _eval@obj@ _thread@obj@ _system@obj@ 

LIBRARIES_SCM = $(HEADERS_SCM) "_gambit\#.scm" "gambit\#.scm" \
"r5rs\#.scm" "r4rs\#.scm" "digest\#.scm" digest.scm syntax-case.scm

LIBRARY = $(LIB_PREFIX)$(GAMBCLIB)$(LIB_EXTENSION)
LIBRARY_OBJECTS = $(NORMAL_O) $(MODULES_O) _$(GAMBCLIB)@obj@
LIBRARY_OBJECTS_PLUS = $(NORMAL_O_PLUS) $(MODULES_O_PLUS) +_$(GAMBCLIB)@obj@
LIBRARY_OBJECTS_COMMA = $(NORMAL_O_COMMA),$(MODULES_O_COMMA),_$(GAMBCLIB)@obj@
LIBRARY_OBJECTS_IN_COMPILE_ORDER = $(MODULES_O_IN_COMPILE_ORDER) \
$(NORMAL_O_IN_COMPILE_ORDER) _$(GAMBCLIB)@obj@

LIBRARIES = $(LIBRARY)

LIBRARY_LIBS =

OBJECTS = $(LIBRARY_OBJECTS)

RCFILES = makefile.in header.scm $(MODULES_SCM) sys.scm \
$(LIBRARIES_SCM) $(NORMAL_SOURCES) check___P check___P.st \
psyntax69c.pp psyntax69c.ss psyntax73.pp psyntax73.ss \
syntax-case-build syntax-case-expand-file \
syntax-case-postlude.scm syntax-case-prelude.scm

GENDISTFILES = $(MODULES_C) _$(GAMBCLIB).c

DISTFILES = $(RCFILES) $(GENDISTFILES)

INSTFILES_LIB_DATA = _$(GAMBCLIB).c $(LIBRARIES_SCM)

GAMBCDIR_INCLUDE = $(rootfromhere)/include
GAMBCDIR_LIB = $(rootfromhere)/lib
GAMBCDIR_LIB_GSI = $(rootfromhere)/gsi
GAMBCDIR_LIB_GSC = $(rootfromhere)/gsc

BUILD_OBJ_OUTPUT_FILENAME = $*@obj@
BUILD_OBJ_CC_OPTIONS =  -I$(srcdir) $(DEFS) $(GAMBCLIB_DEFS) -D___PRIMAL
BUILD_OBJ_INPUT_FILENAMES = $(srcdirpfx)$*.c

all:

all-pre:

all-post: $(LIBRARY) _$(GAMBCLIB).c

.c@obj@:
	@BUILD_OBJ@ -D___LIBRARY

.scm.c:
	@SETDLPATHBOOT@ $(rootfromhere)/gsc-boot -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include -f -c @COMPILATION_OPTIONS@ $(srcdirpfx)$*.scm

$(LIBRARY): $(LIBRARY_OBJECTS_IN_COMPILE_ORDER)
	rm -f $(LIBRARY)
	@MAKE_LIBRARY@

_$(GAMBCLIB).c: $(MODULES_C)
	@SETDLPATHBOOT@ $(rootfromhere)/gsc-boot -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include -f -link -flat -o _$(GAMBCLIB).c $(MODULES_C)

main@obj@: main.c $(srcdirpfx)$(rootfromhere)/include/gambit.h

setup@obj@: setup.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h setup.h mem.h c_intf.h

mem@obj@: mem.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h setup.h mem.h c_intf.h

c_intf@obj@: c_intf.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h setup.h mem.h c_intf.h

os@obj@: os.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_base.h os_time.h os_shell.h os_files.h os_dyn.h os_tty.h os_io.h setup.h mem.h c_intf.h

os_base@obj@: os_base.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_base.h

os_time@obj@: os_time.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_time.h

os_shell@obj@: os_shell.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_shell.h os_files.h

os_files@obj@: os_files.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_files.h

os_dyn@obj@: os_dyn.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_dyn.h

os_tty@obj@: os_tty.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_tty.h

os_io@obj@: os_io.c $(srcdirpfx)$(rootfromhere)/include/gambit.h os.h os_io.h

$(MODULES_C): $(srcdirpfx)$(rootfromhere)/lib/header.scm \
$(srcdirpfx)$(rootfromhere)/lib/gambit\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_gambit\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/gambit\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_gambit\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_kernel\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_system\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_num\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_std\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_eval\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_io\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_nonstd\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_thread\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_repl\#.scm

$(MODULES_O): $(srcdirpfx)$(rootfromhere)/include/gambit.h

_kernel.o: $(srcdirpfx)$(rootfromhere)/include/stamp.h

bootstrap-pre:

bootstrap-post:
	cp $(LIBRARY) $(rootfromhere)/$(LIBRARY)

install-pre:

install-post-comp-sc: all
	@echo "*** Compiling ~~lib/syntax-case.scm (this may take a while)"
	rm -f syntax-case.o*
	@SETDLPATH@ $(srcdirpfx)$(rootfromhere)/gsc/gsc -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include syntax-case

install-post: all
	c_libdir=$(DESTDIR)$(prefix)/lib; \
	i_libdir=$(DESTDIR)$(libdir); \
	t_libdir=$$i_libdir; \
	$(srcdirpfx)$(rootfromhere)/mkidirs $$i_libdir; \
	if test "@ENABLE_SYMLINKS@" = "yes"; then \
	  $(srcdirpfx)$(rootfromhere)/mkidirs $$c_libdir; \
	  t_libdir=$$c_libdir; \
	fi; \
	for file in $(INSTFILES_LIB_DATA); do \
	  $(INSTALL_DATA) $$file $$t_libdir/$$file; \
	done; \
	for file in $(LIBRARIES); do \
	  $(INSTALL_LIB) $$file $$t_libdir/$$file; \
	done; \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  r_libdir=`$(rootfromhere)/relpath "$$t_libdir" "$$i_libdir" @ENABLE_MULTIPLE_VERSIONS@`; \
	  for file in $(INSTFILES_LIB_DATA) $(LIBRARIES); do \
	    (cd $$i_libdir && $(LN_S) $$r_libdir$$file $$file); \
	  done; \
	fi

uninstall-pre:

uninstall-post:
	c_libdir=$(DESTDIR)$(prefix)/lib; \
	i_libdir=$(DESTDIR)$(libdir); \
	t_libdir=$$i_libdir; \
	if test "@ENABLE_SYMLINKS@" = "yes"; then \
	  t_libdir=$$c_libdir; \
	fi; \
	for file in $(INSTFILES_LIB_DATA) $(LIBRARIES); do \
	  rm -f $$t_libdir/$$file; \
	done; \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  for file in $(INSTFILES_LIB_DATA) $(LIBRARIES); do \
	    rm -f $$i_libdir/$$file; \
	  done; \
	fi; \
	rmdir $$t_libdir 2> /dev/null; \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  rmdir $$i_libdir 2> /dev/null; \
	fi

select-gen-for-commit-pre:

select-gen-for-commit-post:
	$(RC) update-index --no-assume-unchanged $(MODULES_C) _$(GAMBCLIB).c

deselect-gen-for-commit-pre:

deselect-gen-for-commit-post:
	$(RC) update-index --assume-unchanged $(MODULES_C) _$(GAMBCLIB).c

mostlyclean-pre:

mostlyclean-post:
	rm -f $(OBJECTS) $(LIBRARY)

clean-pre: mostlyclean-pre

clean-post: mostlyclean-post
	rm -f *.da *.bb *.bbg *.gcov *.gcno *.gcda

distclean-pre: clean-pre

distclean-post: clean-post

bootclean-pre: distclean-pre

bootclean-post: distclean-post
	rm -f $(MODULES_C) _$(GAMBCLIB).c

realclean-pre: bootclean-pre

realclean-post: bootclean-post
	rm -f makefile

rc-setup-pre:
	$(RC) add $(RCFILES) $(GENDISTFILES)

rc-setup-post:

dist-pre dist-devel-pre:
	mkdir $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot)
	chmod 777 $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot)
	@echo "  Copying distribution files:"
	@for file in $(DISTFILES); do \
	  echo "    $(herefromroot)/$$file"; \
	  ln $(srcdirpfx)$$file $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot) 2> /dev/null \
	    || cp -p $(srcdirpfx)$$file $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot); \
	done

dist-post dist-devel-post:

all-recursive:
	@if test -n "@RTLIBSUBSYS@"; then \
	  for subdir in ""@RTLIBSUBSYS@; do \
	    (cd $$subdir && $(MAKE) all) || exit 1; \
	  done \
	fi

bootstrap-recursive install-recursive uninstall-recursive select-gen-for-commit-recursive deselect-gen-for-commit-recursive mostlyclean-recursive clean-recursive distclean-recursive bootclean-recursive realclean-recursive rc-setup-recursive dist-recursive dist-devel-recursive:
	@if test -n "$(SUBDIRS)"; then \
	  for subdir in ""$(SUBDIRS); do \
	    target=`echo $@ | sed 's/-recursive//'`; \
	    echo making $$target in $$subdir; \
	    (cd $$subdir && $(MAKE) $$target) || exit 1; \
	  done \
	fi

all: all-post

all-post: all-recursive

all-recursive: all-pre

bootstrap: bootstrap-post

bootstrap-post: bootstrap-recursive

bootstrap-recursive: bootstrap-pre

install: install-post

install-post: install-recursive

install-recursive: install-pre

uninstall: uninstall-post

uninstall-post: uninstall-recursive

uninstall-recursive: uninstall-pre

select-gen-for-commit: select-gen-for-commit-post

select-gen-for-commit-post: select-gen-for-commit-recursive

select-gen-for-commit-recursive: select-gen-for-commit-pre

deselect-gen-for-commit: deselect-gen-for-commit-post

deselect-gen-for-commit-post: deselect-gen-for-commit-recursive

deselect-gen-for-commit-recursive: deselect-gen-for-commit-pre

mostlyclean: mostlyclean-post

mostlyclean-post: mostlyclean-recursive

mostlyclean-recursive: mostlyclean-pre

clean: clean-post

clean-post: clean-recursive

clean-recursive: clean-pre

distclean: distclean-post

distclean-post: distclean-recursive

distclean-recursive: distclean-pre

bootclean: bootclean-post

bootclean-post: bootclean-recursive

bootclean-recursive: bootclean-pre

realclean: realclean-post

realclean-post: realclean-recursive

realclean-recursive: realclean-pre

rc-setup: rc-setup-post

rc-setup-post: rc-setup-recursive

rc-setup-recursive: rc-setup-pre

dist: dist-post

dist-post: dist-recursive

dist-recursive: dist-pre

dist-devel: dist-devel-post

dist-devel-post: dist-devel-recursive

dist-devel-recursive: dist-devel-pre

makefile: makefile.in $(rootfromhere)/config.status
	cd $(rootfromhere) && CONFIG_FILES=$(herefromroot)/$@ CONFIG_HEADERS= ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
