(define results '(
("boyer"
 (1500
  ""
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  ""
  " -ftree-ccp"
  ""
  ""
  " -ftree-dse"
  ""
  ""
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  " -fmerge-constants"
  " -fcrossjumping"
  ""
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  ""
  ""
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  ""
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  " -fivopts"
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("browse"
 (4480
  " -fno-merge-constants"
  ""
  ""
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  ""
  ""
  " -fno-loop-optimize"
  " -ftree-ccp"
  " -ftree-dce"
  ""
  ""
  ""
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  ""
  ""
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  ""
  ""
  " -fregmove"
  ""
  " -freorder-blocks"
  " -fthread-jumps"
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  ""
  ""
  " -falign-labels"
  " -ftree-pre"
  " -funswitch-loops"
  ""
  ""
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  " -fivopts"
  ""
  ""))
("cpstak"
 (2064
  ""
  ""
  ""
  ""
  " -fno-cprop-registers"
  " -fno-if-conversion"
  " -fno-delayed-branch"
  ""
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  ""
  " -ftree-lrs"
  " -ftree-sra"
  ""
  " -ftree-fre"
  ""
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  ""
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  ""
  ""
  ""
  " -fprefetch-loop-arrays"
  " -fno-inline"
  " -fpeel-loops"
  ""
  ""
  ""
  " -fno-function-cse"
  ""
  ""
  " -ftree-loop-im"
  ""
  ""
  ""
  " -fvariable-expansion-in-unroller"))
("ctak"
 (1692
  " -fno-merge-constants"
  " -fno-defer-pop"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  ""
  " -fcrossjumping"
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  ""
  ""
  " -fsched-interblock"
  ""
  ""
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  " -falign-labels"
  " -ftree-pre"
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  ""
  ""
  " -fpeel-loops"
  ""
  ""
  ""
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  ""
  " -ftree-vectorize"
  ""))
("dderiv"
 (2740
  " -fno-merge-constants"
  ""
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  ""
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  ""
  ""
  ""
  " -ftree-fre"
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  " -fsched-spec"
  ""
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("deriv"
 (2216
  ""
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  ""
  ""
  " -ftree-ccp"
  ""
  " -ftree-dominator-opts"
  ""
  ""
  " -ftree-lrs"
  " -ftree-sra"
  ""
  ""
  ""
  ""
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  ""
  ""
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  ""
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  ""
  " -fgcse-after-reload"
  ""
  ""
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  ""
  " -ftree-loop-im"
  ""
  " -fivopts"
  ""
  ""))
("destruc"
 (1600
  " -fno-merge-constants"
  " -fno-defer-pop"
  ""
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  ""
  ""
  ""
  " -ftree-fre"
  ""
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  ""
  ""
  " -fforce-addr"
  ""
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  ""
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  ""
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  ""
  ""
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  " -fivopts"
  " -ftree-vectorize"
  ""))
("diviter"
 (2088
  ""
  " -fno-defer-pop"
  ""
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  " -fno-if-conversion"
  ""
  " -fno-loop-optimize"
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  ""
  ""
  ""
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  ""
  ""
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  ""
  ""
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  ""
  " -fsched-spec"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-all-loops"
  ""
  " -fno-function-cse"
  " -fgcse-sm"
  ""
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  " -ftree-vectorize"
  ""))
("divrec"
 (3336
  " -fno-merge-constants"
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  ""
  " -floop-optimize2"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  ""
  ""
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  " -freorder-functions"
  ""
  ""
  ""
  " -falign-labels"
  " -ftree-pre"
  ""
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-loops"
  ""
  ""
  " -fgcse-sm"
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  " -fivopts"
  " -ftree-vectorize"
  ""))
("puzzle"
 (1776
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -floop-optimize2"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  " -ftree-lrs"
  " -ftree-sra"
  ""
  " -ftree-fre"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  ""
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  " -fsched-spec"
  " -freorder-blocks"
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  ""
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  ""))
("takl"
 (3304
  ""
  ""
  ""
  ""
  " -fno-cprop-registers"
  " -fno-if-conversion"
  ""
  " -floop-optimize2"
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  " -fmerge-constants"
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-mem"
  " -fpeephole2"
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  " -fthread-jumps"
  ""
  " -fsched-interblock"
  " -fsched-spec"
  " -freorder-blocks"
  " -freorder-functions"
  ""
  " -falign-jumps"
  ""
  " -falign-labels"
  ""
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  " -ftracer"
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  ""
  " -fgcse-sm"
  ""
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("triangl"
 (2736
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  ""
  ""
  ""
  ""
  " -ftree-ter"
  ""
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  ""
  " -fcrossjumping"
  ""
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  ""
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  ""
  " -fgcse-lm"
  ""
  " -fsched-spec"
  " -freorder-blocks"
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  ""
  ""
  ""
  " -funroll-all-loops"
  ""
  ""
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  ""
  ""
  " -fvariable-expansion-in-unroller"))
("ack"
 (156
  ""
  " -fno-defer-pop"
  ""
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  " -floop-optimize2"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  ""
  ""
  " -freorder-blocks"
  " -freorder-functions"
  " -falign-functions"
  ""
  " -falign-loops"
  " -falign-labels"
  " -ftree-pre"
  " -funswitch-loops"
  " -fgcse-after-reload"
  ""
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  " -ftracer"
  " -funroll-all-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  " -fvariable-expansion-in-unroller"))
("array1"
 (1028
  " -fno-merge-constants"
  ""
  ""
  ""
  " -fno-cprop-registers"
  ""
  ""
  " -floop-optimize2"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  ""
  ""
  ""
  " -ftree-fre"
  " -ftree-ch"
  ""
  " -fcrossjumping"
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  ""
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  " -freorder-functions"
  ""
  " -falign-jumps"
  ""
  " -falign-labels"
  " -ftree-pre"
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  ""
  ""
  " -fpeel-loops"
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  ""
  ""
  ""
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("cat"
 (1440
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  ""
  " -fno-if-conversion"
  ""
  " -floop-optimize2"
  " -ftree-ccp"
  ""
  ""
  ""
  ""
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  ""
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  ""
  ""
  " -freorder-blocks"
  ""
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  " -funswitch-loops"
  " -fgcse-after-reload"
  ""
  ""
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  ""
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  ""))
("string"
 (216
  ""
  ""
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  " -fno-if-conversion"
  " -fno-delayed-branch"
  " -floop-optimize2"
  ""
  ""
  ""
  ""
  ""
  " -ftree-lrs"
  " -ftree-sra"
  ""
  ""
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -fpeephole2"
  " -fschedule-insns"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -freorder-functions"
  " -falign-functions"
  ""
  " -falign-loops"
  ""
  " -ftree-pre"
  " -funswitch-loops"
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  " -fpeel-loops"
  ""
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  ""
  ""
  ""
  " -fivopts"
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("sum1"
 (176
  " -fno-merge-constants"
  ""
  ""
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  " -fno-if-conversion"
  ""
  ""
  ""
  ""
  ""
  " -ftree-dse"
  ""
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  ""
  ""
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  ""
  " -falign-functions"
  ""
  ""
  " -falign-labels"
  ""
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  ""
  ""
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  " -fvariable-expansion-in-unroller"))
("sumloop"
 (1080
  ""
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  " -floop-optimize2"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  " -ftree-lrs"
  " -ftree-sra"
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  ""
  ""
  ""
  ""
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  ""
  " -fsched-interblock"
  ""
  ""
  " -freorder-functions"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ffloat-store"
  ""
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  ""
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("tail"
 (1248
  ""
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ftree-ter"
  " -ftree-lrs"
  ""
  ""
  " -ftree-fre"
  ""
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  ""
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  ""
  ""
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  ""
  " -falign-labels"
  " -ftree-pre"
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  ""
  ""
  " -fvariable-expansion-in-unroller"))
("wc"
 (760
  " -fno-merge-constants"
  " -fno-defer-pop"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ftree-dominator-opts"
  " -ftree-dse"
  " -ftree-ter"
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  ""
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  ""
  ""
  " -freorder-blocks"
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  ""
  ""
  ""
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  " -fivopts"
  " -ftree-vectorize"
  ""))
("fft"
 (1120
  ""
  ""
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  ""
  ""
  ""
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-mem"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  " -falign-labels"
  ""
  " -funswitch-loops"
  ""
  ""
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  ""
  " -funroll-loops"
  ""
  " -fno-function-cse"
  ""
  " -fgcse-las"
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  " -ftree-vectorize"
  ""))
("fib"
 (3244
  " -fno-merge-constants"
  ""
  ""
  ""
  ""
  ""
  ""
  " -fno-loop-optimize"
  " -ftree-ccp"
  ""
  ""
  ""
  ""
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  ""
  ""
  ""
  ""
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  ""
  " -freorder-blocks"
  " -fthread-jumps"
  ""
  ""
  " -fsched-spec"
  ""
  ""
  ""
  ""
  " -falign-loops"
  " -falign-labels"
  " -ftree-pre"
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  ""
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  ""
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("fibfp"
 (2096
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  " -ftree-ter"
  ""
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  ""
  ""
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  ""
  " -ftree-vectorize"
  ""))
("mbrot"
 (1892
  " -fno-merge-constants"
  " -fno-defer-pop"
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  " -fno-if-conversion"
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  " -ftree-ccp"
  ""
  " -ftree-dominator-opts"
  " -ftree-dse"
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  ""
  ""
  ""
  " -fgcse"
  ""
  ""
  ""
  ""
  " -fcaller-saves"
  ""
  ""
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  ""
  " -falign-functions"
  ""
  " -falign-loops"
  ""
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -fbranch-target-load-optimize"
  ""
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  ""
  " -ftree-vectorize"
  ""))
("pnpoly"
 (1316
  ""
  ""
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  ""
  ""
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  " -ftree-lrs"
  ""
  ""
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  ""
  ""
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  ""
  ""
  ""
  ""
  ""
  " -fsched-interblock"
  ""
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  ""
  ""
  " -fprefetch-loop-arrays"
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  ""))
("sum"
 (936
  " -fno-merge-constants"
  ""
  ""
  " -fno-guess-branch-probability"
  ""
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  " -ftree-ter"
  ""
  " -ftree-sra"
  ""
  ""
  " -ftree-ch"
  " -fmerge-constants"
  ""
  ""
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  ""
  ""
  ""
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  ""
  " -fsched-spec"
  " -freorder-blocks"
  ""
  ""
  ""
  " -falign-loops"
  " -falign-labels"
  ""
  ""
  " -fgcse-after-reload"
  ""
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  " -fivopts"
  ""
  ""))
("sumfp"
 (1356
  ""
  ""
  ""
  ""
  ""
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  " -ftree-ccp"
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  " -ftree-lrs"
  " -ftree-sra"
  ""
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  ""
  ""
  ""
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  " -freorder-blocks"
  ""
  ""
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  ""
  ""
  ""
  ""
  " -fno-inline"
  " -fpeel-loops"
  " -ftracer"
  ""
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  ""
  ""
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("tak"
 (2712
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  " -fno-if-conversion"
  ""
  ""
  " -ftree-ccp"
  ""
  " -ftree-dominator-opts"
  " -ftree-dse"
  " -ftree-ter"
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  ""
  ""
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  ""
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  ""
  ""
  " -fprefetch-loop-arrays"
  ""
  ""
  ""
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  ""
  " -ftree-loop-im"
  ""
  ""
  " -ftree-vectorize"
  ""))
("conform"
 (1984
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  ""
  " -fno-if-conversion"
  ""
  ""
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  ""
  " -ftree-sra"
  ""
  " -ftree-fre"
  ""
  " -fmerge-constants"
  ""
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  " -freorder-blocks"
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  ""
  ""
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  ""
  " -fgcse-las"
  " -ftree-loop-im"
  ""
  ""
  ""
  ""))
("dynamic"
 (1340
  " -fno-merge-constants"
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  ""
  ""
  ""
  " -floop-optimize2"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  ""
  ""
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  ""
  ""
  ""
  " -fdelete-null-pointer-checks"
  ""
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  " -funswitch-loops"
  ""
  ""
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  ""
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  ""
  " -ftree-vectorize"
  ""))
("earley"
 (1348
  ""
  " -fno-defer-pop"
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  ""
  ""
  ""
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  ""
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  ""
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  ""
  ""
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  " -fgcse-las"
  ""
  ""
  ""
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("fibc"
 (1616
  " -fno-merge-constants"
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  ""
  ""
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  ""
  ""
  " -ftree-sra"
  ""
  " -ftree-fre"
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  " -fdelete-null-pointer-checks"
  ""
  ""
  ""
  " -fsched-interblock"
  ""
  ""
  " -freorder-functions"
  ""
  ""
  ""
  ""
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  ""
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  " -fvariable-expansion-in-unroller"))
("graphs"
 (1848
  " -fno-merge-constants"
  ""
  ""
  " -fno-guess-branch-probability"
  " -fno-cprop-registers"
  " -fno-if-conversion"
  " -fno-delayed-branch"
  " -floop-optimize2"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  ""
  ""
  ""
  " -ftree-copyrename"
  ""
  ""
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  ""
  ""
  ""
  ""
  " -fthread-jumps"
  ""
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  " -fgcse-after-reload"
  ""
  ""
  ""
  ""
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize"
  " -fno-function-cse"
  " -fgcse-sm"
  ""
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("lattice"
 (3048
  ""
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  " -fno-if-conversion"
  ""
  " -floop-optimize2"
  " -ftree-ccp"
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  ""
  " -fcrossjumping"
  ""
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  ""
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  ""
  " -falign-functions"
  " -falign-jumps"
  ""
  ""
  ""
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  ""
  ""
  " -fpeel-loops"
  " -ftracer"
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  " -fvariable-expansion-in-unroller"))
("matrix"
 (2188
  ""
  ""
  ""
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  ""
  " -ftree-ccp"
  ""
  ""
  ""
  " -ftree-ter"
  " -ftree-lrs"
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  ""
  ""
  ""
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  " -fdelete-null-pointer-checks"
  ""
  ""
  ""
  " -fsched-interblock"
  " -fsched-spec"
  ""
  ""
  ""
  " -falign-jumps"
  ""
  ""
  " -ftree-pre"
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  " -fno-inline"
  ""
  ""
  " -funroll-loops"
  " -fbranch-target-load-optimize"
  ""
  " -fgcse-sm"
  " -fgcse-las"
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("maze"
 (2672
  ""
  ""
  " -fno-thread-jumps"
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  " -floop-optimize2"
  ""
  ""
  " -ftree-dominator-opts"
  ""
  ""
  ""
  ""
  " -ftree-copyrename"
  " -ftree-fre"
  " -ftree-ch"
  " -fmerge-constants"
  ""
  ""
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  ""
  " -freorder-functions"
  " -falign-functions"
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  ""
  ""
  " -ffloat-store"
  ""
  ""
  " -fpeel-loops"
  " -ftracer"
  " -funroll-loops"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("mazefun"
 (1936
  " -fno-merge-constants"
  " -fno-defer-pop"
  " -fno-thread-jumps"
  ""
  ""
  ""
  ""
  ""
  " -ftree-ccp"
  ""
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  ""
  ""
  ""
  " -fcrossjumping"
  ""
  ""
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  " -fcaller-saves"
  ""
  " -fpeephole2"
  ""
  ""
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  ""
  ""
  ""
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  " -fgcse-after-reload"
  " -ffloat-store"
  ""
  ""
  " -fpeel-loops"
  " -ftracer"
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  ""
  ""
  " -fvariable-expansion-in-unroller"))
("nqueens"
 (1924
  " -fno-merge-constants"
  ""
  " -fno-thread-jumps"
  ""
  ""
  ""
  " -fno-delayed-branch"
  ""
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  " -ftree-dse"
  ""
  " -ftree-lrs"
  ""
  ""
  ""
  ""
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  " -fschedule-insns"
  ""
  " -fdelete-null-pointer-checks"
  " -freorder-blocks"
  ""
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  " -freorder-blocks"
  ""
  ""
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  " -funswitch-loops"
  ""
  ""
  ""
  " -fno-inline"
  ""
  " -ftracer"
  " -funroll-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  ""
  ""
  ""
  " -ftree-loop-ivcanon"
  " -fivopts"
  " -ftree-vectorize"
  ""))
("paraffins"
 (4116
  ""
  ""
  ""
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  ""
  ""
  ""
  ""
  ""
  " -ftree-lrs"
  ""
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  " -fmerge-constants"
  ""
  ""
  " -fgcse"
  ""
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  ""
  " -fcaller-saves"
  " -fforce-addr"
  ""
  " -fschedule-insns"
  " -fregmove"
  ""
  ""
  ""
  ""
  " -fsched-interblock"
  ""
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  " -falign-loops"
  ""
  ""
  ""
  " -fgcse-after-reload"
  ""
  ""
  " -fno-inline"
  " -fpeel-loops"
  ""
  ""
  ""
  " -fno-function-cse"
  ""
  ""
  ""
  ""
  ""
  ""
  ""))
("peval"
 (1576
  ""
  " -fno-defer-pop"
  ""
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  " -fno-loop-optimize"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  " -ftree-fre"
  ""
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  ""
  ""
  ""
  ""
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  ""
  " -falign-labels"
  " -ftree-pre"
  ""
  " -fgcse-after-reload"
  ""
  ""
  ""
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  ""
  ""
  ""
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  " -fivopts"
  ""
  " -fvariable-expansion-in-unroller"))
("primes"
 (3168
  " -fno-merge-constants"
  ""
  ""
  ""
  " -fno-cprop-registers"
  ""
  " -fno-delayed-branch"
  ""
  " -ftree-ccp"
  " -ftree-dce"
  ""
  ""
  " -ftree-ter"
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  ""
  ""
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  ""
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  " -fschedule-insns"
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  ""
  " -fgcse-lm"
  ""
  ""
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  " -ftree-pre"
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  ""
  ""
  ""
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  ""
  ""
  " -fivopts"
  ""
  " -fvariable-expansion-in-unroller"))
("ray"
 (1576
  " -fno-merge-constants"
  ""
  " -fno-thread-jumps"
  " -fno-guess-branch-probability"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -ftree-ter"
  ""
  ""
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  " -fmerge-constants"
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  " -fstrength-reduce"
  ""
  " -frerun-loop-opt"
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  " -fsched-interblock"
  ""
  ""
  ""
  ""
  " -falign-jumps"
  ""
  ""
  " -ftree-pre"
  ""
  ""
  ""
  ""
  " -fno-inline"
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  ""
  " -fgcse-sm"
  " -fgcse-las"
  ""
  " -ftree-loop-ivcanon"
  ""
  ""
  ""))
("scheme"
 (1948
  ""
  " -fno-defer-pop"
  ""
  ""
  ""
  ""
  ""
  " -floop-optimize2"
  ""
  " -ftree-dce"
  ""
  " -ftree-dse"
  ""
  ""
  " -ftree-sra"
  " -ftree-copyrename"
  ""
  " -ftree-ch"
  " -fmerge-constants"
  " -fcrossjumping"
  " -fcse-follow-jumps"
  ""
  " -fexpensive-optimizations"
  ""
  ""
  ""
  ""
  " -fforce-addr"
  " -fpeephole2"
  ""
  " -fregmove"
  " -fdelete-null-pointer-checks"
  ""
  " -fthread-jumps"
  " -fgcse-lm"
  ""
  " -fsched-spec"
  ""
  " -freorder-functions"
  ""
  " -falign-jumps"
  " -falign-loops"
  " -falign-labels"
  ""
  ""
  " -fgcse-after-reload"
  " -ffloat-store"
  " -fprefetch-loop-arrays"
  ""
  ""
  " -ftracer"
  " -funroll-all-loops"
  " -fbranch-target-load-optimize2"
  " -fno-function-cse"
  " -fgcse-sm"
  " -fgcse-las"
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  ""
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
("simplex"
 (1812
  ""
  ""
  ""
  ""
  ""
  ""
  " -fno-delayed-branch"
  ""
  ""
  " -ftree-dce"
  " -ftree-dominator-opts"
  ""
  " -ftree-ter"
  " -ftree-lrs"
  ""
  ""
  ""
  ""
  ""
  ""
  " -fcse-follow-jumps"
  " -fgcse"
  " -fexpensive-optimizations"
  ""
  " -frerun-cse-after-loop"
  " -frerun-loop-opt"
  " -fcaller-saves"
  " -fforce-addr"
  " -fpeephole2"
  ""
  ""
  ""
  ""
  " -fthread-jumps"
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  ""
  " -falign-labels"
  ""
  ""
  " -fgcse-after-reload"
  ""
  " -fprefetch-loop-arrays"
  ""
  " -fpeel-loops"
  ""
  " -funroll-all-loops"
  ""
  " -fno-function-cse"
  ""
  ""
  " -ftree-loop-im"
  " -ftree-loop-ivcanon"
  ""
  " -ftree-vectorize"
  " -fvariable-expansion-in-unroller"))
))


(define (sort-list l <?)

  (define (mergesort l)

    (define (merge l1 l2)
      (cond ((null? l1) l2)
            ((null? l2) l1)
            (else
             (let ((e1 (car l1)) (e2 (car l2)))
               (if (<? e1 e2)
                 (cons e1 (merge (cdr l1) l2))
                 (cons e2 (merge l1 (cdr l2))))))))

    (define (split l)
      (if (or (null? l) (null? (cdr l)))
        l
        (cons (car l) (split (cddr l)))))

    (if (or (null? l) (null? (cdr l)))
      l
      (let* ((l1 (mergesort (split l)))
             (l2 (mergesort (split (cdr l)))))
        (merge l1 l2))))

  (mergesort l))

(define (count lst)
  (if (null? lst)
      '()
      (let ((c (count (cdr lst))))
        (let ((x (assoc (car lst) c)))
          (if x
              (begin
                (set-cdr! x (+ 1 (cdr x)))
                c)
              (cons (cons (car lst) 1) c))))))

(define (ocount lst)
  (sort-list (count lst) (lambda (x y) (> (cdr x) (cdr y)))))

(define (stats res)
  (apply map
         (lambda lst
           (ocount lst))
         (map (lambda (x) (cdr (cadr x)))
              res)))

(pp (sort-list (stats results) (lambda (x y) (> (cdar x) (cdar y)))))

